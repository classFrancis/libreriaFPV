# Generated by Django 4.2.15 on 2024-08-08 23:24

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "rut",
                    models.CharField(blank=True, max_length=12, null=True, unique=True),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Autor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nombreAutor", models.CharField(max_length=150)),
                ("apellidoAutor", models.CharField(max_length=150)),
                ("biografiaAutor", models.TextField(blank=True, max_length=2500)),
            ],
        ),
        migrations.CreateModel(
            name="CarroDeCompra",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "totalPrecio",
                    models.DecimalField(decimal_places=2, default=0.0, max_digits=6),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Comentario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contenidoComentario", models.TextField(max_length=1000)),
                ("timestampComentario", models.DateTimeField(auto_now_add=True)),
                ("modificacion_timestampComentario", models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Libro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("titulo", models.CharField(max_length=200)),
                (
                    "imagen",
                    models.ImageField(
                        blank=True, null=True, upload_to="imagenes_libros/"
                    ),
                ),
                ("tematica", models.CharField(max_length=150)),
                ("editorial", models.CharField(max_length=150)),
                ("edicion", models.CharField(max_length=150)),
                ("fechaDePublicacion", models.DateField()),
                ("cantidad", models.IntegerField()),
                ("precio", models.DecimalField(decimal_places=2, max_digits=5)),
                ("disponible", models.BooleanField(default=False)),
                (
                    "autorlibro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="libreriaApp.autor",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tituloPost", models.CharField(max_length=200)),
                ("contenidoPost", models.TextField(max_length=15000)),
                ("timestampPost", models.DateTimeField(auto_now_add=True)),
                ("modificacion_timestampPost", models.DateField(auto_now=True)),
                (
                    "puntuacion",
                    models.DecimalField(decimal_places=2, default=0, max_digits=3),
                ),
                (
                    "libroAsociado",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="libreriaApp.libro",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Reporte",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("motivoReporte", models.CharField(max_length=1000)),
                (
                    "estadoReporte",
                    models.CharField(
                        choices=[("PENDIENTE", "Pendiente"), ("RESUELTO", "Resuelto")],
                        default="PENDIENTE",
                        max_length=10,
                    ),
                ),
                ("timestampReporte", models.DateTimeField(auto_now_add=True)),
                ("modificacion_timestampReporte", models.DateField(auto_now=True)),
                (
                    "comentario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="libreriaApp.comentario",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="libreriaApp.post",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Perfil",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "imagenPerfil",
                    models.ImageField(
                        blank=True, null=True, upload_to="imagenes_perfil/"
                    ),
                ),
                ("biografiaPerfil", models.TextField(max_length=2500)),
                ("areasDeInteres", models.CharField(max_length=1000)),
                (
                    "librosLeidos",
                    models.ManyToManyField(
                        blank=True, related_name="libros_leidos", to="libreriaApp.libro"
                    ),
                ),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Notificacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "tipoNotificacion",
                    models.CharField(
                        choices=[
                            ("AVISOS", "avisos"),
                            ("NUEVO COMENTARIO", "nuevo comentario"),
                            ("REPORTE", "reporte"),
                        ],
                        default="AVISOS",
                        max_length=17,
                    ),
                ),
                ("mensajeNotificacion", models.TextField(max_length=1000)),
                ("estadoVista", models.BooleanField(default=False)),
                (
                    "comentario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="libreriaApp.comentario",
                    ),
                ),
                (
                    "post",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="libreriaApp.post",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ItemCarro",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cantidad", models.IntegerField(default=1)),
                (
                    "carro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="libreriaApp.carrodecompra",
                    ),
                ),
                (
                    "libro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="libreriaApp.libro",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="comentario",
            name="post",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="libreriaApp.post"
            ),
        ),
        migrations.AddField(
            model_name="comentario",
            name="usuario",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.AddField(
            model_name="carrodecompra",
            name="librosAcomprar",
            field=models.ManyToManyField(
                blank=True, through="libreriaApp.ItemCarro", to="libreriaApp.libro"
            ),
        ),
        migrations.AddField(
            model_name="carrodecompra",
            name="usuario",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Puntuacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("puntuacion", models.DecimalField(decimal_places=2, max_digits=3)),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="puntuaciones",
                        to="libreriaApp.post",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("usuario", "post")},
            },
        ),
    ]
